Criando pedido de pix - Request

const orderDetails = {
  reference_id: 'ORDER1234',
  customer: {
    name: customerNameData,
    email: customerEmailData,
    tax_id: customerCpfData,
    phones: [{
      country: '55',
      area: firstTwoDigits,
      number: remainingDigits,
      type: 'MOBILE'
    }]
  },
  items: [{
    reference_id: course.reference_id,
    name: course.name,
    quantity: 1,
    unit_amount: course.unit_amount
  }],
  notification_urls: [
    "https://meusite.com/notificacoes"
  ],
  qr_codes: [
    {
      amount: {
        value: course.unit_amount
      },
      expiration_date: getExpirationDate(2),
    }
  ]
};

try {
  const response = await axios.post(`${process.env.BASE_URL}/orders`, JSON.stringify(orderDetails), {
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${process.env.TOKEN}`,
      'accept': '*/*',
    }
  });

  res.status(200).json(response.data);
} catch (error) {
  console.error(error.response ? error.response.data : error.message);
  res.status(500).json(error.response ? error.response.data : error.message);
}

Criando pedido de pix - Response

{
    "id": "ORDE_B04E1D25-60C8-4031-966F-B8584BBA09E2",
    "reference_id": "ORDER1234",
    "created_at": "2024-07-23T09:42:22.742-03:00",
    "customer": {
        "name": "Daniel urbaneki",
        "email": "daniel@hotmail.com",
        "tax_id": "10185376940",
        "phones": [
            {
                "type": "MOBILE",
                "country": "55",
                "area": "45",
                "number": "999789334"
            }
        ]
    },
    "items": [
        {
            "reference_id": "hipertrofia-e-emagrecimento-instantaneo",
            "name": "Curso de Pós-graduação de Hipertrofia e Emagrecimento Instantaneo",
            "quantity": 1,
            "unit_amount": 7890
        }
    ],
    "qr_codes": [
        {
            "id": "QRCO_AFCF942A-3C36-4491-AA82-C7E07EAB3688",
            "expiration_date": "2024-07-23T11:42:24.000-03:00",
            "amount": {
                "value": 7890
            },
            "text": "00020101021226850014br.gov.bcb.pix2563api-h.pagseguro.com/pix/v2/AFCF942A-3C36-4491-AA82-C7E07EAB368827600016BR.COM.PAGSEGURO0136AFCF942A-3C36-4491-AA82-C7E07EAB3688520457335303986540578.905802BR5915Daniel urbaneki6008Cascavel62070503***63040F81",
            "arrangements": [
                "PIX"
            ],
            "links": [
                {
                    "rel": "QRCODE.PNG",
                    "href": "https://sandbox.api.pagseguro.com/qrcode/QRCO_AFCF942A-3C36-4491-AA82-C7E07EAB3688/png",
                    "media": "image/png",
                    "type": "GET"
                },
                {
                    "rel": "QRCODE.BASE64",
                    "href": "https://sandbox.api.pagseguro.com/qrcode/QRCO_AFCF942A-3C36-4491-AA82-C7E07EAB3688/base64",
                    "media": "text/plain",
                    "type": "GET"
                }
            ]
        }
    ],
    "notification_urls": [
        "https://meusite.com/notificacoes"
    ],
    "links": [
        {
            "rel": "SELF",
            "href": "https://sandbox.api.pagseguro.com/orders/ORDE_B04E1D25-60C8-4031-966F-B8584BBA09E2",
            "media": "application/json",
            "type": "GET"
        },
        {
            "rel": "PAY",
            "href": "https://sandbox.api.pagseguro.com/orders/ORDE_B04E1D25-60C8-4031-966F-B8584BBA09E2/pay",
            "media": "application/json",
            "type": "POST"
        }
    ]
}

Criando pedido de cartão de crédito - Request

const orderDetails = {
  reference_id: 'ORDER1234',
  customer: {
    name: customerNameData,
    email: customerEmailData,
    tax_id: customerCpfData,
    phones: [{
      country: '55',
      area: firstTwoDigits,
      number: remainingDigits,
      type: 'MOBILE'
    }]
  },
  items: [{
    reference_id: course.reference_id,
    name: course.name,
    quantity: 1,
    unit_amount: course.unit_amount
  }],
  notification_urls: [
    "https://meusite.com/notificacoes"
  ],
  charges: [{
    reference_id: 'CHARGE1234',
    description: 'Cobrança de Teste',
    amount: selectedPlan.amount,
    payment_method: {
      type: 'CREDIT_CARD',
      installments: cardInstallmentsData,
      capture: true,
      card: {
        encrypted: cardEncrypted,
        store: false,
      },
      holder: {
        name: customerNameData,
        tax_id: customerCpfData
      }
    },
  }],
};

try {
  const response = await axios.post(`${process.env.BASE_URL}/orders`, JSON.stringify(orderDetails), {
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${process.env.TOKEN}`,
      'accept': '*/*',
    }
  });

  // console.log(response.data);
  res.status(200).json(response.data);
} catch (error) {
  console.error(error.response ? error.response.data : error.message);
  res.status(500).json(error.response ? error.response.data : error.message);
}

Criando pedido de cartão de crédito - Response

{
    "id": "ORDE_2F7977C9-0BC0-419D-BFFD-84BCE5CB0844",
    "reference_id": "ORDER1234",
    "created_at": "2024-07-23T09:48:23.129-03:00",
    "customer": {
        "name": "Daniel urbaneki",
        "email": "daniel@hotmail.com",
        "tax_id": "10185376940",
        "phones": [
            {
                "type": "MOBILE",
                "country": "55",
                "area": "45",
                "number": "999789334"
            }
        ]
    },
    "items": [
        {
            "reference_id": "hipertrofia-e-emagrecimento-instantaneo",
            "name": "Curso de Pós-graduação de Hipertrofia e Emagrecimento Instantaneo",
            "quantity": 1,
            "unit_amount": 7890
        }
    ],
    "charges": [
        {
            "id": "CHAR_A73AADC1-43DE-4D71-9CBB-6A0C5B5283BA",
            "reference_id": "CHARGE1234",
            "status": "PAID",
            "created_at": "2024-07-23T09:48:23.933-03:00",
            "paid_at": "2024-07-23T09:48:26.000-03:00",
            "description": "Cobrança de Teste",
            "amount": {
                "value": 8590,
                "currency": "BRL",
                "fees": {
                    "buyer": {
                        "interest": {
                            "total": 700,
                            "installments": 4
                        }
                    }
                },
                "summary": {
                    "total": 8590,
                    "paid": 8590,
                    "refunded": 0
                }
            },
            "payment_response": {
                "code": "20000",
                "message": "SUCESSO",
                "reference": "032416400102",
                "raw_data": {
                    "authorization_code": "145803",
                    "nsu": "032416400102",
                    "reason_code": "00"
                }
            },
            "payment_method": {
                "type": "CREDIT_CARD",
                "installments": 4,
                "capture": true,
                "card": {
                    "brand": "mastercard",
                    "first_digits": "534008",
                    "last_digits": "2454",
                    "exp_month": "12",
                    "exp_year": "2026",
                    "holder": {
                        "name": "Daniel"
                    },
                    "store": false
                },
                "soft_descriptor": "DanielUrbanekiDos"
            },
            "links": [
                {
                    "rel": "SELF",
                    "href": "https://sandbox.api.pagseguro.com/charges/CHAR_A73AADC1-43DE-4D71-9CBB-6A0C5B5283BA",
                    "media": "application/json",
                    "type": "GET"
                },
                {
                    "rel": "CHARGE.CANCEL",
                    "href": "https://sandbox.api.pagseguro.com/charges/CHAR_A73AADC1-43DE-4D71-9CBB-6A0C5B5283BA/cancel",
                    "media": "application/json",
                    "type": "POST"
                }
            ]
        }
    ],
    "notification_urls": [
        "https://meusite.com/notificacoes"
    ],
    "links": [
        {
            "rel": "SELF",
            "href": "https://sandbox.api.pagseguro.com/orders/ORDE_2F7977C9-0BC0-419D-BFFD-84BCE5CB0844",
            "media": "application/json",
            "type": "GET"
        },
        {
            "rel": "PAY",
            "href": "https://sandbox.api.pagseguro.com/orders/ORDE_2F7977C9-0BC0-419D-BFFD-84BCE5CB0844/pay",
            "media": "application/json",
            "type": "POST"
        }
    ]
}

Pegando quantidade de parcelas com base nos 6 primeiros digitos do cartão - Request

try {
  const response = await axios.get(`${process.env.BASE_URL}/charges/fees/calculate`, {
    params: {
      value: Number(course.unit_amount),
      payment_methods: "CREDIT_CARD",
      max_installments: Number(course.installments),
      max_installments_no_interest: 0,
      credit_card_bin: Number(credit_card_bin),
    },
    headers: {
      'Authorization': `Bearer ${process.env.TOKEN}`,
      'Content-Type': 'application/json',
      'accept': '*/*'
    }
  });

  return res.status(200).json(response.data);
} catch (error) {
  console.error('Erro ao obter opções de parcelamento:', error.response ? error.response.data : error.message);
  return res.status(400).send('Cartão não encontrado!');
}

Pegando quantidade de parcelas com base nos 6 primeiros digitos do cartão - Response

{
    "payment_methods": {
        "credit_card": {
            "mastercard": {
                "installment_plans": [
                    {
                        "installments": 1,
                        "installment_value": 7890,
                        "interest_free": true,
                        "amount": {
                            "value": 7890,
                            "currency": "BRL"
                        }
                    },
                    {
                        "installments": 2,
                        "installment_value": 4153,
                        "interest_free": false,
                        "amount": {
                            "value": 8305,
                            "fees": {
                                "buyer": {
                                    "interest": {
                                        "total": 415,
                                        "installments": 2
                                    }
                                }
                            },
                            "currency": "BRL"
                        }
                    },
                    {
                        "installments": 3,
                        "installment_value": 2816,
                        "interest_free": false,
                        "amount": {
                            "value": 8447,
                            "fees": {
                                "buyer": {
                                    "interest": {
                                        "total": 557,
                                        "installments": 3
                                    }
                                }
                            },
                            "currency": "BRL"
                        }
                    },
                    {
                        "installments": 4,
                        "installment_value": 2148,
                        "interest_free": false,
                        "amount": {
                            "value": 8590,
                            "fees": {
                                "buyer": {
                                    "interest": {
                                        "total": 700,
                                        "installments": 4
                                    }
                                }
                            },
                            "currency": "BRL"
                        }
                    },
                    {
                        "installments": 5,
                        "installment_value": 1747,
                        "interest_free": false,
                        "amount": {
                            "value": 8735,
                            "fees": {
                                "buyer": {
                                    "interest": {
                                        "total": 845,
                                        "installments": 5
                                    }
                                }
                            },
                            "currency": "BRL"
                        }
                    }
                ]
            }
        }
    }
}

Pegando informações sobre a ordem criada. - Request

  try {
  const response = await axios.get(`${process.env.BASE_URL}/orders/${orderId}`, {
    headers: {
      'Authorization': `Bearer ${process.env.TOKEN}`,
      'Content-Type': 'application/json',
      'accept': '*/*'
    }
  });

  res.status(200).json(response.data);
} catch (error) {
  console.error('Error fetching transaction status:', error.response ? error.response.data : error.message);
  res.status(500).json({ error: 'Error fetching transaction status' });
}

Pegando informações sobre a ordem criada. - Response

{
    "id": "ORDE_8D65334D-6FEA-4095-9C58-C9BBF5A95182",
    "reference_id": "ORDER1234",
    "created_at": "2024-07-23T09:53:18.769-03:00",
    "customer": {
        "name": "Daniel urbaneki",
        "email": "daniel@hotmail.com",
        "tax_id": "10185376940",
        "phones": [
            {
                "type": "MOBILE",
                "country": "55",
                "area": "45",
                "number": "999789334"
            }
        ]
    },
    "items": [
        {
            "reference_id": "emagrecimento-feminino-estrategias-nutricionais-hormonais",
            "name": "Emagrecimento Feminino: Estratégias Nutricionais & Hormonais",
            "quantity": 1,
            "unit_amount": 19900
        }
    ],
    "qr_codes": [
        {
            "id": "QRCO_6F7614F9-1DEF-4708-AA50-64932CEA9C18",
            "expiration_date": "2024-07-23T11:53:21.000-03:00",
            "amount": {
                "value": 19900
            },
            "text": "00020101021226850014br.gov.bcb.pix2563api-h.pagseguro.com/pix/v2/6F7614F9-1DEF-4708-AA50-64932CEA9C1827600016BR.COM.PAGSEGURO01366F7614F9-1DEF-4708-AA50-64932CEA9C185204573353039865406199.005802BR5915Daniel urbaneki6008Cascavel62070503***63042003",
            "arrangements": [
                "PIX"
            ],
            "links": [
                {
                    "rel": "QRCODE.PNG",
                    "href": "https://sandbox.api.pagseguro.com/qrcode/QRCO_6F7614F9-1DEF-4708-AA50-64932CEA9C18/png",
                    "media": "image/png",
                    "type": "GET"
                },
                {
                    "rel": "QRCODE.BASE64",
                    "href": "https://sandbox.api.pagseguro.com/qrcode/QRCO_6F7614F9-1DEF-4708-AA50-64932CEA9C18/base64",
                    "media": "text/plain",
                    "type": "GET"
                }
            ]
        }
    ],
    "notification_urls": [
        "https://meusite.com/notificacoes"
    ],
    "links": [
        {
            "rel": "SELF",
            "href": "https://sandbox.api.pagseguro.com/orders/ORDE_8D65334D-6FEA-4095-9C58-C9BBF5A95182",
            "media": "application/json",
            "type": "GET"
        },
        {
            "rel": "PAY",
            "href": "https://sandbox.api.pagseguro.com/orders/ORDE_8D65334D-6FEA-4095-9C58-C9BBF5A95182/pay",
            "media": "application/json",
            "type": "POST"
        }
    ]
}